{"ast":null,"code":"const LOAD = \"albums/LOAD\";\nconst ADD_ALBUM = \"albums/ADD\";\n\nconst load = list => ({\n  type: LOAD,\n  list\n});\n\nconst addAlbum = album => ({\n  type: ADD_ALBUM,\n  album\n});\n\nexport const getAlbums = () => async dispatch => {\n  const response = await fetch(`/api/albums/`);\n\n  if (response.ok) {\n    const list = await response.json();\n    dispatch(load(list));\n  }\n};\nexport const getAlbum = payload => async dispatch => {\n  const response = await fetch(`/api/albums/${payload}/images`);\n\n  if (response.ok) {\n    const album = await response.json();\n    dispatch(addAlbum(album));\n  }\n};\nconst initialState = {\n  entries: []\n};\n\nconst albumReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOAD:\n      {\n        return { ...state,\n          entries: [...action.list.albums]\n        };\n      }\n\n    case ADD_ALBUM:\n      {\n        return { ...state,\n          entries: [...state.entries, action.album, action.images]\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default albumReducer;","map":{"version":3,"sources":["/home/xander/appacademy-class-work/capstone/main/alcove/alcove-main/react-app/src/store/album.js"],"names":["LOAD","ADD_ALBUM","load","list","type","addAlbum","album","getAlbums","dispatch","response","fetch","ok","json","getAlbum","payload","initialState","entries","albumReducer","state","action","albums","images"],"mappings":"AAAA,MAAMA,IAAI,GAAG,aAAb;AACA,MAAMC,SAAS,GAAG,YAAlB;;AAGA,MAAMC,IAAI,GAAGC,IAAI,KAAK;AAClBC,EAAAA,IAAI,EAAEJ,IADY;AAElBG,EAAAA;AAFkB,CAAL,CAAjB;;AAKA,MAAME,QAAQ,GAAIC,KAAD,KAAY;AACzBF,EAAAA,IAAI,EAAEH,SADmB;AAEzBK,EAAAA;AAFyB,CAAZ,CAAjB;;AAMA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC7C,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAF,CAA5B;;AAEA,MAAID,QAAQ,CAACE,EAAb,EAAiB;AACb,UAAMR,IAAI,GAAG,MAAMM,QAAQ,CAACG,IAAT,EAAnB;AACAJ,IAAAA,QAAQ,CAACN,IAAI,CAACC,IAAD,CAAL,CAAR;AACH;AACJ,CAPM;AASP,OAAO,MAAMU,QAAQ,GAAIC,OAAD,IAAa,MAAMN,QAAN,IAAkB;AACnD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcI,OAAQ,SAAxB,CAA5B;;AAEA,MAAIL,QAAQ,CAACE,EAAb,EAAiB;AACb,UAAML,KAAK,GAAG,MAAMG,QAAQ,CAACG,IAAT,EAApB;AACAJ,IAAAA,QAAQ,CAACH,QAAQ,CAACC,KAAD,CAAT,CAAR;AACH;AACJ,CAPM;AAUP,MAAMS,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACf,IAAf;AAEI,SAAKJ,IAAL;AAAW;AACP,eAAO,EACH,GAAGkB,KADA;AAEHF,UAAAA,OAAO,EAAE,CAAC,GAAGG,MAAM,CAAChB,IAAP,CAAYiB,MAAhB;AAFN,SAAP;AAIH;;AAED,SAAKnB,SAAL;AAAgB;AACZ,eAAO,EACH,GAAGiB,KADA;AAEHF,UAAAA,OAAO,EAAE,CAAC,GAAGE,KAAK,CAACF,OAAV,EAAmBG,MAAM,CAACb,KAA1B,EAAiCa,MAAM,CAACE,MAAxC;AAFN,SAAP;AAIH;;AAED;AAAS,aAAOH,KAAP;AAhBb;AAkBH,CAnBD;;AAqBA,eAAeD,YAAf","sourcesContent":["const LOAD = \"albums/LOAD\";\nconst ADD_ALBUM = \"albums/ADD\"\n\n\nconst load = list => ({\n    type: LOAD,\n    list\n})\n\nconst addAlbum = (album) => ({\n    type: ADD_ALBUM,\n    album\n});\n\n\nexport const getAlbums = () => async dispatch => {\n    const response = await fetch(`/api/albums/`);\n\n    if (response.ok) {\n        const list = await response.json();\n        dispatch(load(list));\n    }\n}\n\nexport const getAlbum = (payload) => async dispatch => {\n    const response = await fetch(`/api/albums/${payload}/images`);\n\n    if (response.ok) {\n        const album = await response.json();\n        dispatch(addAlbum(album))\n    }\n}\n\n\nconst initialState = {\n    entries: []\n};\n\nconst albumReducer = (state = initialState, action) => {\n    switch (action.type) {\n\n        case LOAD: {\n            return {\n                ...state,\n                entries: [...action.list.albums]\n            }\n        }\n\n        case ADD_ALBUM: {\n            return {\n                ...state,\n                entries: [...state.entries, action.album, action.images]\n            }\n        }\n\n        default: return state;\n    }\n}\n\nexport default albumReducer;\n"]},"metadata":{},"sourceType":"module"}